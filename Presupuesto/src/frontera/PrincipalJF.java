/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PrincipalJF.java
 *
 * Created on 1/10/2012, 04:51:56 PM
 */
package frontera;

import control.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jvnet.substance.SubstanceLookAndFeel;

/**
 *
 * @author fredy
 */
public class PrincipalJF extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalJF
     */
    ControlSistema controls = new ControlSistema();
    String presupuestoSeleccionado;
    String rubroSeleccionado;
    String itemSeleccionado;

    public PrincipalJF() {
        JFrame.setDefaultLookAndFeelDecorated(true);
        SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin.CremeSkin");
        initComponents();
        iniciarSistema();
        inicializar();
    }

    public void inicializar() {

        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        PanelesPestanas.removeAll();
        llenarPresupuesto();
        PanelesPestanas.add("Presupuestos", PresupuestoPanel);
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("resources/money_24.png"));


        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogoProyectoPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PanelesPestanas = new javax.swing.JTabbedPane();
        PresupuestoPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PresupuestoTable = new javax.swing.JTable();
        CrearPresupuestoBoton = new javax.swing.JButton();
        reporteBoton = new javax.swing.JButton();
        actualizarPresupuestoBoton = new javax.swing.JButton();
        RubroPanel = new javax.swing.JPanel();
        EditarRubroBoton = new javax.swing.JButton();
        CrearRubroBoton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        RubroTable = new javax.swing.JTable();
        EliminarRubroBoton = new javax.swing.JButton();
        TransferirRecursosBoton = new javax.swing.JButton();
        actualizarRubroBoton = new javax.swing.JButton();
        ItemPanel = new javax.swing.JPanel();
        EditarItemBoton = new javax.swing.JButton();
        EliminarItemBoton = new javax.swing.JButton();
        CrearItemBoton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ItemTable = new javax.swing.JTable();
        actualizarItemBoton = new javax.swing.JButton();
        mensajeprincipalPanel = new javax.swing.JPanel();
        mensajeprincipalLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ContinuarBoton = new javax.swing.JButton();
        mensajeContinuarLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Presupuesto");
        setIconImage(getIconImage());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SISTEMA DE PRESUPUESTO");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Bienvenido !!");

        javax.swing.GroupLayout LogoProyectoPanelLayout = new javax.swing.GroupLayout(LogoProyectoPanel);
        LogoProyectoPanel.setLayout(LogoProyectoPanelLayout);
        LogoProyectoPanelLayout.setHorizontalGroup(
            LogoProyectoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogoProyectoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(LogoProyectoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoProyectoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(386, 386, 386))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoProyectoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(563, 563, 563))))
        );
        LogoProyectoPanelLayout.setVerticalGroup(
            LogoProyectoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoProyectoPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        PanelesPestanas.setBorder(javax.swing.BorderFactory.createTitledBorder("Sistema de Presupuestos"));

        PresupuestoPanel.setPreferredSize(new java.awt.Dimension(820, 386));

        PresupuestoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre del Presupuesto", "Fecha de Realizaci√≥n", "Recursos Aprobados", "Recursos Comprometidos", "Recursos por Comprometer", "Recursos Ejecutados", "Recursos por Ejecutar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PresupuestoTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(PresupuestoTable);
        PresupuestoTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        CrearPresupuestoBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document_empty_24.png"))); // NOI18N
        CrearPresupuestoBoton.setText("Crear Presupuesto  ");
        CrearPresupuestoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearPresupuestoBotonActionPerformed(evt);
            }
        });

        reporteBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/chart_line_24.png"))); // NOI18N
        reporteBoton.setText("Generar Reporte del Presupuesto Seleccionado");
        reporteBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteBotonActionPerformed(evt);
            }
        });

        actualizarPresupuestoBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/reload_24.png"))); // NOI18N
        actualizarPresupuestoBoton.setText("Actualizar Tabla");
        actualizarPresupuestoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarPresupuestoBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PresupuestoPanelLayout = new javax.swing.GroupLayout(PresupuestoPanel);
        PresupuestoPanel.setLayout(PresupuestoPanelLayout);
        PresupuestoPanelLayout.setHorizontalGroup(
            PresupuestoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PresupuestoPanelLayout.createSequentialGroup()
                .addGroup(PresupuestoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PresupuestoPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(CrearPresupuestoBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reporteBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actualizarPresupuestoBoton)
                        .addGap(0, 599, Short.MAX_VALUE))
                    .addGroup(PresupuestoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1272, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PresupuestoPanelLayout.setVerticalGroup(
            PresupuestoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PresupuestoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PresupuestoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CrearPresupuestoBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PresupuestoPanelLayout.createSequentialGroup()
                        .addComponent(reporteBoton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(actualizarPresupuestoBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelesPestanas.addTab("Presupuestos", PresupuestoPanel);

        EditarRubroBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pencil_24.png"))); // NOI18N
        EditarRubroBoton.setText("Editar Rubro Seleccionado  ");
        EditarRubroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarRubroBotonActionPerformed(evt);
            }
        });

        CrearRubroBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document_empty_24.png"))); // NOI18N
        CrearRubroBoton.setText("Crear Rubro  ");
        CrearRubroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearRubroBotonActionPerformed(evt);
            }
        });

        RubroTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre del Rubro", "Fecha de Creaci√≥n", "Recursos Aprobados", "Recursos Ejecutados", "Recursos por Ejecutar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RubroTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(RubroTable);
        RubroTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        EliminarRubroBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/trash_24.png"))); // NOI18N
        EliminarRubroBoton.setText("Eliminar Rubro Seleccionado  ");
        EliminarRubroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarRubroBotonActionPerformed(evt);
            }
        });

        TransferirRecursosBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/calculator_24.png"))); // NOI18N
        TransferirRecursosBoton.setText("Transferir Recursos Entre Rubros  ");
        TransferirRecursosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferirRecursosBotonActionPerformed(evt);
            }
        });

        actualizarRubroBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/reload_24.png"))); // NOI18N
        actualizarRubroBoton.setText("Actualizar Tabla");
        actualizarRubroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarRubroBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RubroPanelLayout = new javax.swing.GroupLayout(RubroPanel);
        RubroPanel.setLayout(RubroPanelLayout);
        RubroPanelLayout.setHorizontalGroup(
            RubroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RubroPanelLayout.createSequentialGroup()
                .addGroup(RubroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RubroPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1272, Short.MAX_VALUE))
                    .addGroup(RubroPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(CrearRubroBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditarRubroBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarRubroBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TransferirRecursosBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actualizarRubroBoton)
                        .addGap(0, 288, Short.MAX_VALUE)))
                .addContainerGap())
        );
        RubroPanelLayout.setVerticalGroup(
            RubroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RubroPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RubroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditarRubroBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EliminarRubroBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(RubroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TransferirRecursosBoton)
                        .addComponent(actualizarRubroBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(CrearRubroBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelesPestanas.addTab("Rubros", RubroPanel);

        EditarItemBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pencil_24.png"))); // NOI18N
        EditarItemBoton.setText("Editar Item Seleccionado  ");
        EditarItemBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarItemBotonActionPerformed(evt);
            }
        });

        EliminarItemBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/trash_24.png"))); // NOI18N
        EliminarItemBoton.setText("Eliminar Item Seleccionado  ");
        EliminarItemBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarItemBotonActionPerformed(evt);
            }
        });

        CrearItemBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/document_empty_24.png"))); // NOI18N
        CrearItemBoton.setText("Crear Item  ");
        CrearItemBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearItemBotonActionPerformed(evt);
            }
        });

        ItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Nombre del Item", "Fecha de Creaci√≥n", "Recursos Ejecutados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ItemTable.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(ItemTable);
        ItemTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        actualizarItemBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/reload_24.png"))); // NOI18N
        actualizarItemBoton.setText("Actualizar Tabla");
        actualizarItemBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarItemBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ItemPanelLayout = new javax.swing.GroupLayout(ItemPanel);
        ItemPanel.setLayout(ItemPanelLayout);
        ItemPanelLayout.setHorizontalGroup(
            ItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemPanelLayout.createSequentialGroup()
                .addGroup(ItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ItemPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(CrearItemBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditarItemBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarItemBoton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actualizarItemBoton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1205, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ItemPanelLayout.setVerticalGroup(
            ItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CrearItemBoton)
                    .addComponent(EditarItemBoton)
                    .addComponent(EliminarItemBoton)
                    .addComponent(actualizarItemBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelesPestanas.addTab("Items", ItemPanel);

        mensajeprincipalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensajes"));

        javax.swing.GroupLayout mensajeprincipalPanelLayout = new javax.swing.GroupLayout(mensajeprincipalPanel);
        mensajeprincipalPanel.setLayout(mensajeprincipalPanelLayout);
        mensajeprincipalPanelLayout.setHorizontalGroup(
            mensajeprincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mensajeprincipalPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mensajeprincipalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        mensajeprincipalPanelLayout.setVerticalGroup(
            mensajeprincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mensajeprincipalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mensajeprincipalLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ContinuarBoton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ContinuarBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/arrow_right_24.png"))); // NOI18N
        ContinuarBoton.setText("  Continuar  ");
        ContinuarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinuarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ContinuarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ContinuarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mensajeContinuarLabel.setText("Ver Rubros del Presupuesto Seleccionado ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LogoProyectoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PanelesPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(mensajeprincipalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mensajeContinuarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LogoProyectoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelesPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mensajeprincipalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(mensajeContinuarLabel)
                        .addGap(31, 31, 31))))
        );

        getAccessibleContext().setAccessibleName("SistemadePresupuesto");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ContinuarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinuarBotonActionPerformed
        // TODO add your handling code here:
        if (PanelesPestanas.getSelectedIndex() == 0) {
            if (PresupuestoTable.getSelectedRow() != -1) {
                mensajeContinuarLabel.setText("Ver √çtems del Rubro seleccionado");
                presupuestoSeleccionado = (String) PresupuestoTable.getValueAt(PresupuestoTable.getSelectedRow(), 0);
                llenarRubro();
                if (PanelesPestanas.getTabCount() > 1) {
                    PanelesPestanas.remove(1);
                }
                if (PanelesPestanas.getTabCount() > 1) {
                    PanelesPestanas.remove(1);
                }
                PanelesPestanas.add("Rubros", RubroPanel);
                PanelesPestanas.setSelectedIndex(1);
            } else {
                JOptionPane.showMessageDialog(null, "Imposible continuar, no ha seleccionado ning√∫n Presupuesto. Porfavor seleccione un Presupuesto para continuar");
            }
        } else {
            if (PanelesPestanas.getSelectedIndex() == 1) {
                if (RubroTable.getSelectedRow() != -1) {
                    mensajeContinuarLabel.setText("Volver a la pesta√±a de Presupuestos");
                    rubroSeleccionado = (String) RubroTable.getValueAt(RubroTable.getSelectedRow(), 0);
                    llenarItem();
                    PanelesPestanas.add("Items", ItemPanel);
                    PanelesPestanas.setSelectedIndex(2);
                } else {
                    JOptionPane.showMessageDialog(null, "Imposible continuar, no ha seleccionado ning√∫n Rubro. Porfavor seleccione un Rubro para continuar");
                }
            } else {
                if (PanelesPestanas.getSelectedIndex() == 2) {
                    mensajeContinuarLabel.setText("Ver Rubros del Presupuesto Seleccionado");
                    PanelesPestanas.setSelectedIndex(0);
                    PanelesPestanas.remove(1);
                    PanelesPestanas.remove(1);
                    llenarPresupuesto();
                }
            }
        }
    }//GEN-LAST:event_ContinuarBotonActionPerformed

    private void CrearPresupuestoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearPresupuestoBotonActionPerformed
        // TODO add your handling code here:
        NuevoPresupuesto nuevopresupuesto = new NuevoPresupuesto(this, true);
        nuevopresupuesto.setVisible(true);
        String datos[] = nuevopresupuesto.getValues();
        if (!datos[0].equals("") && !datos[1].equals("")) {
            datos[1] = datos[1].replace(',', '.');
            String estado = controls.crearPresupuesto(datos);
            if (estado.equals("Planeacion Creada")) {
                mensajeprincipalLabel.setText("Presupuesto " + datos[0] + " creado");
            } else {
                mensajeprincipalLabel.setText(estado);
            }
        } else if (datos[2].equals("true")) {
            JOptionPane.showMessageDialog(null, "Ingrese los Datos en los Campos");
        }
        llenarPresupuesto();
    }//GEN-LAST:event_CrearPresupuestoBotonActionPerformed

    private void CrearRubroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearRubroBotonActionPerformed
        // TODO add your handling code here:
        NuevoRubro nuevorubro = new NuevoRubro(this, true);
        nuevorubro.setVisible(true);
        String datos[] = nuevorubro.getValues();
        if (!(datos[0].equals("") && datos[1].equals(""))) {
            datos[1] = datos[1].replace(',', '.');
            String mensaje = controls.crearRubro(datos, presupuestoSeleccionado);
            if (mensaje.equals("Rubro agregado satisfactoriamente")) {
                mensajeprincipalLabel.setText("Rubro " + datos[0] + " creado con valor " + datos[1]);
                llenarRubro();
            } else {
                JOptionPane.showMessageDialog(null, mensaje);
            }
        }
    }//GEN-LAST:event_CrearRubroBotonActionPerformed

    private void CrearItemBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearItemBotonActionPerformed
        // TODO add your handling code here:
        NuevoItem nuevoitem = new NuevoItem(this, true);
        nuevoitem.setVisible(true);
        String datos[] = nuevoitem.getValues();
        if (!(datos[0].equals("") && datos[1].equals("")&& datos[2].equals(""))) {
            datos[1] = datos[1].replace(',', '.');
            String mensaje = controls.crearItem(datos, presupuestoSeleccionado, rubroSeleccionado);
            if (mensaje.equals("Item creado Satisfactoriamente")) {
                mensajeprincipalLabel.setText("√çtem " + datos[0] + " creado con valor" + datos[1] + " en la fecha " + datos[2]);
                llenarItem();
            } else {
                JOptionPane.showMessageDialog(null, mensaje);
            }

        }
    }//GEN-LAST:event_CrearItemBotonActionPerformed

    private void EliminarRubroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarRubroBotonActionPerformed
        // TODO add your handling code here:
        if (RubroTable.getSelectedRow() != -1) {
            if (JOptionPane.showConfirmDialog(null, "Est√° seguro que desea eliminar el Rubro seleccionado?") == 0) {
                rubroSeleccionado = (String) RubroTable.getValueAt(RubroTable.getSelectedRow(), 0);
                String mensaje = controls.eliminarRubro(presupuestoSeleccionado,rubroSeleccionado);
                if (mensaje.equals("Rubro eliminado satisfactoriamente")) {
                    mensajeprincipalLabel.setText("Rubro eliminado");
                    llenarRubro();
                } else {
                    JOptionPane.showMessageDialog(null, mensaje);
                }
            }
        } else {
            new JOptionPane().showMessageDialog(null, "Error al eliminar, no ha seleccionado ningun Rubro. Porfavor seleccione un Rubro para continuar");
        }
    }//GEN-LAST:event_EliminarRubroBotonActionPerformed

    private void EliminarItemBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarItemBotonActionPerformed
        // TODO add your handling code here:
        if (ItemTable.getSelectedRow() != -1) {
            if (JOptionPane.showConfirmDialog(null, "Est√° seguro que desea eliminar el √≠tem seleccionado?") == 0) {
                itemSeleccionado = (String) ItemTable.getValueAt(ItemTable.getSelectedRow(), 0);
                long idItem = (long)controls.getItem(presupuestoSeleccionado, rubroSeleccionado, itemSeleccionado)[3];
                String mensaje = controls.eliminarItem(idItem);
                if (mensaje.equals("Item eliminado satisfactoriamente")) {
                    mensajeprincipalLabel.setText("Item eliminado");
                    llenarItem();
                } else {
                    JOptionPane.showMessageDialog(null, mensaje);
                }
            }
        } else {
            new JOptionPane().showMessageDialog(null, "Error al eliminar, no ha seleccionado ningun √çtem. Porfavor seleccione un √çtem para continuar");
        }
    }//GEN-LAST:event_EliminarItemBotonActionPerformed

    private void TransferirRecursosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferirRecursosBotonActionPerformed
        // TODO add your handling code here:
        TransferirRecursos transferencia = new TransferirRecursos(this, true, presupuestoSeleccionado);
        transferencia.setVisible(true);
        String r[] = transferencia.getValues();
        if (!r[0].equals("OperacionCancelada") && !r[0].equals("") && !r[1].equals("") && !r[2].equals("")) {
            r[2] = r[2].replace(',', '.');
            float t = -120;
            try {
                t=Float.parseFloat(r[2]);
            } catch (NumberFormatException x) {
            }
            if (t != -120) {
                String mensaje = controls.transferirFondos(presupuestoSeleccionado, r[0], r[1], t);
                if (mensaje.equals("Fondos insuficientes para realizar la transferencia")) {
                    JOptionPane.showMessageDialog(null, mensaje);
                } else {
                    mensajeprincipalLabel.setText("Se transfirieron " + r[2] + " de " + r[0] + " a " + r[1]);
                }
                llenarRubro();
            }
        }
    }//GEN-LAST:event_TransferirRecursosBotonActionPerformed

    private void EditarRubroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarRubroBotonActionPerformed
        // TODO add your handling code here:
        if (RubroTable.getSelectedRow() >= 0) {
            rubroSeleccionado = (String) RubroTable.getValueAt(RubroTable.getSelectedRow(), 0);
            DecimalFormat formatter = new DecimalFormat("0");
            String q = formatter.format(RubroTable.getValueAt(RubroTable.getSelectedRow(), 2));
            EditarRubro editarrubro = new EditarRubro(this, true, rubroSeleccionado, q);
            editarrubro.setVisible(true);
            String a[] = editarrubro.getValues();
            a[1] = a[1].replace(',', '.');
            if (!a[0].equals("") && !a[1].equals("")) {
                String mensaje = controls.editarRubro(presupuestoSeleccionado, rubroSeleccionado, a);
                if (mensaje.equals("Rubro editado satisfactoriamente")) {
                    mensajeprincipalLabel.setText(mensaje);
                    llenarRubro();
                } else {
                    JOptionPane.showMessageDialog(null, mensaje);
                }
            }
        } else {
            new JOptionPane().showMessageDialog(null, "Error al editar, no ha seleccionado ningun Rubro. Porfavor seleccione un Rubro para continuar");
        }
    }//GEN-LAST:event_EditarRubroBotonActionPerformed

    private void EditarItemBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarItemBotonActionPerformed
        // TODO add your handling code here:
        if (ItemTable.getSelectedRow() >= 0) {
            itemSeleccionado = (String) ItemTable.getValueAt(ItemTable.getSelectedRow(), 0);
            DecimalFormat formatter = new DecimalFormat("0.00");
            String q = formatter.format(ItemTable.getValueAt(ItemTable.getSelectedRow(), 2));
            EditarItem editaritem = new EditarItem(this, true, itemSeleccionado, q);
            editaritem.setVisible(true);
            String a[] = editaritem.getValues();
            a[1] = a[1].replace(',', '.');
            if (!a[0].equals("") && !a[1].equals("") && !a[2].equals("")) {
                long idItem = (long)controls.getItem(presupuestoSeleccionado, rubroSeleccionado, itemSeleccionado)[3];
                String mensaje = controls.editarItem(presupuestoSeleccionado, rubroSeleccionado, idItem, a);
                if (mensaje.equals("Modificaci√≥n del Item Satisfactoria")) {
                    mensajeprincipalLabel.setText(mensaje);
                    llenarItem();
                } else {
                    JOptionPane.showMessageDialog(null, mensaje);
                }
            }
        } else {
            new JOptionPane().showMessageDialog(null, "Error al editar, no ha seleccionado ningun √çtem. Porfavor seleccione un √çtem para continuar");
        }
    }//GEN-LAST:event_EditarItemBotonActionPerformed

    private void reporteBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteBotonActionPerformed
        // TODO add your handling code here:
        if (PresupuestoTable.getSelectedRow() == -1) {
            new JOptionPane().showMessageDialog(null, "Error al generar Reporte, no ha seleccionado ning√∫n Presupuesto. Porfavor seleccione un Presupuesto.");
        } else {
            new Reporte(this, true, (String) PresupuestoTable.getValueAt(PresupuestoTable.getSelectedRow(), 0)).setVisible(true);
        }
    }//GEN-LAST:event_reporteBotonActionPerformed

    private void actualizarItemBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarItemBotonActionPerformed
        llenarItem();
    }//GEN-LAST:event_actualizarItemBotonActionPerformed

    private void actualizarRubroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarRubroBotonActionPerformed
        llenarRubro();
    }//GEN-LAST:event_actualizarRubroBotonActionPerformed

    private void actualizarPresupuestoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarPresupuestoBotonActionPerformed
        llenarPresupuesto();
    }//GEN-LAST:event_actualizarPresupuestoBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalJF().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ContinuarBoton;
    private javax.swing.JButton CrearItemBoton;
    private javax.swing.JButton CrearPresupuestoBoton;
    private javax.swing.JButton CrearRubroBoton;
    private javax.swing.JButton EditarItemBoton;
    private javax.swing.JButton EditarRubroBoton;
    private javax.swing.JButton EliminarItemBoton;
    private javax.swing.JButton EliminarRubroBoton;
    private javax.swing.JPanel ItemPanel;
    private javax.swing.JTable ItemTable;
    private javax.swing.JPanel LogoProyectoPanel;
    private javax.swing.JTabbedPane PanelesPestanas;
    private javax.swing.JPanel PresupuestoPanel;
    private javax.swing.JTable PresupuestoTable;
    private javax.swing.JPanel RubroPanel;
    private javax.swing.JTable RubroTable;
    private javax.swing.JButton TransferirRecursosBoton;
    private javax.swing.JButton actualizarItemBoton;
    private javax.swing.JButton actualizarPresupuestoBoton;
    private javax.swing.JButton actualizarRubroBoton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel mensajeContinuarLabel;
    private javax.swing.JLabel mensajeprincipalLabel;
    private javax.swing.JPanel mensajeprincipalPanel;
    private javax.swing.JButton reporteBoton;
    // End of variables declaration//GEN-END:variables

    private void llenarRubro() {
        DefaultTableModel modelo = (DefaultTableModel) RubroTable.getModel();
        for (int i = 0; i < modelo.getRowCount();) {
            modelo.removeRow(i);
        }
        if (controls.getRubro(presupuestoSeleccionado) == null) {
            JOptionPane.showMessageDialog(null, "No hay Rubros correspondientes al Presupuesto seleccionado");
        } else {
            for (Object[] r : controls.getRubro(presupuestoSeleccionado)) {
                modelo.addRow(r);
            }
        }
    }

    private void llenarItem() {
        DefaultTableModel modelo = (DefaultTableModel) ItemTable.getModel();
        for (int i = 0; i < modelo.getRowCount();) {
            modelo.removeRow(i);
        }
        if (controls.getRubro(presupuestoSeleccionado) == null) {
            JOptionPane.showMessageDialog(null, "No hay Items correspondientes al Rubro seleccionado");
        }
        for (Object[] i : controls.getItem(presupuestoSeleccionado, rubroSeleccionado)) {
            modelo.addRow(i);
        }
    }

    private void llenarPresupuesto() {
        DefaultTableModel modelo = (DefaultTableModel) PresupuestoTable.getModel();
        for (int i = 0; i < modelo.getRowCount();) {
            modelo.removeRow(i);
        }
        if (controls.getPresupuesto()==null) {
            JOptionPane.showMessageDialog(null, "No hay Planeaciones en el Sistema");
        }
        for (Object[] datos : controls.getPresupuesto()) {
            modelo.addRow(datos);
        }
    }

    public void iniciarSistema() {

        String datos[] = {"Primero", "20000000"};
        controls.crearPresupuesto(datos);
        datos[0] = "Segundo";
        datos[1] = "10000000";
        controls.crearPresupuesto(datos);
        datos[0] = "Tercero";
        datos[1] = "50000000";
        controls.crearPresupuesto(datos);
        String[] datosr = {"Computadores", "10000000"};
        System.out.println(controls.crearRubro(datosr, "Primero"));
        datosr[0] = "Viajes";
        datosr[1] = "8540000";
        System.out.println(controls.crearRubro(datosr, "Primero"));
    }
}
